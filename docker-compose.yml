version: '3.9'
services:
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes: 
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${PGADMIN_DEFAULT_EMAIL} -d ${DOMAIN_FOR_CERT} --agree-tos
  docker-cron:
    build:
      context: ./services/docker-cron
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    links:
      - postgres
    networks:
      - internal-network
    restart: unless-stopped
  nginx:
    build:
      context: ./services/nginx
    links:
     - pgadmin4
     # - tagbase_server
    networks:
      - internal-network
    ports:
      - 81:81
      - 443:443
    volumes:
      - ./services/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/proxy/:/usr/share/nginx/html/:ro
      # - ./services/nginx/ssl/cert.pem:/etc/nginx/certs/cert.pem
      # - ./services/nginx/ssl/key.pem:/etc/nginx/certs/key.pem
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  pgadmin4:
    build:
      context: ./services/pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=5434
    expose:
      - 5434
    hostname: pgadmin4
    links:
      - postgres
    networks:
      - internal-network
    restart: unless-stopped
  postgres:
    build:
      context: ./services/postgres
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d tagbase -h postgres -U tagbase"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 15s
    hostname: postgres
    networks:
      - internal-network
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  tagbase_server:
    build:
      context: ./tagbase_server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - SLACK_BOT_CHANNEL=${SLACK_BOT_CHANNEL}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
    links:
      - postgres
    networks:
      - internal-network
    ports:
      - 5433:5433
    restart: unless-stopped
    volumes:
      - ./logs:/usr/src/app/logs
networks:
  internal-network: