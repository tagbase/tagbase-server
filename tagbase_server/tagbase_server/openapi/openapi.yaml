openapi: 3.0.3
components:
  schemas:
    200Response:
      description: 'A generic success response'
      example:
        code: 200
        message: 'Data file eTUFF-sailfish-117259.txt successfully ingested into Tagbase DB.'
        elapsed: ''
      properties:
        code:
          description: 'HTTP status code'
          format: int32
          type: integer
        message:
          description: 'A string detailing specifics of the operation'
          type: string
        elapsed:
          description: 'Elapsed time for the operation'
          type: string
      type: object
    500Response:
      description: '500 Internal Server Error'
      example:
        detail: 'Unable to connect to the Tagbase database'
        status: 500
        title: 'Internal Server Error'
        type: 'about:blank'
      properties:
        detail:
          description: 'Server specific internal error message. For example, the server may have encountered an internal error and was unable to complete your request, the server may be overloaded or there may be an error in the application.'
          type: string
        code:
          description: 'HTTP status code'
          format: int32
          type: integer
        title:
          description: 'Natural language description of response'
          type: string
        type:
          description: 'Additional information (if available)'
          type: string
      type: object
info:
  contact:
    email: tagtuna@gmail.com
    name: Tagbase Dev Team
    url: https://github.com/tagbase/tagbase-server/issues
  description: 'tagbse-server provides HTTP endpoints for ingestion of various files into the Tagbase SQL database. Input file support includes eTUFF (see [here](https://doi.org/10.6084/m9.figshare.10032848.v4) and [here](https://doi.org/10.6084/m9.figshare.10159820.v1)) and [nc-eTAG](https://github.com/oceandatainterop/nc-eTAG/) files; a metadata and data interoperability standard for (non-acoustic) electronic tagging datasets. The REST API complies with [OpenAPI v3.0.3](https://spec.openapis.org/oas/v3.0.3.html) until the tooling for OpenAPI v3.1.0 improves.'
  license:
    name: Apache License v2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  termsOfService: TODO
  title: tagbase-server API
  version: 1.0.0
paths:
  /ingest/etuff:
    get:
      description: 'The etuff endpoint associates an eTUFF file with a given unique identifier before splitting the file, populating mappings to the Tagbase DB structure and executing ingestion.'
      operationId: ingest_etuff_get
      parameters:
      - description: "Unique identifier for the eTUFF file e.g. '888'"
        explode: true
        in: query
        name: granule_id
        required: true
        schema:
          type: string
        style: form
      - description: "Location of a network accessible (file, ftp, http, https) eTUFF
          file e.g. 'file:///usr/src/app/data/eTUFF-sailfish-117259.txt'"
        explode: true
        in: query
        name: file
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200Response'
          description: 'A success message confirming ingestion.'
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Response'
          description: 'A success message confirming ingestion.'
      summary: 'Get eTUFF file and execute ingestion.'
      tags:
      - ingest
      x-openapi-router-controller: tagbase_server.controllers.ingest_controller
servers:
- description: Local development server
  url: http://0.0.0.0:5433/v1.0.0
- description: Staging (non-production) server
  url: https://staging.tagbase.com/v1.0.0
- description: Production server
  url: https://tagbase.com/v1.0.0
tags:
- description: Operations relating to the ingestion of data into tagbase-server.
  name: ingest
