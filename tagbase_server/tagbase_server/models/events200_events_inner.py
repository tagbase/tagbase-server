# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tagbase_server.models.base_model_ import Model
from tagbase_server import util


class Events200EventsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_id=None, tag_id=None, submission_id=None):  # noqa: E501
        """Events200EventsInner - a model defined in OpenAPI

        :param event_id: The event_id of this Events200EventsInner.  # noqa: E501
        :type event_id: str
        :param tag_id: The tag_id of this Events200EventsInner.  # noqa: E501
        :type tag_id: int
        :param submission_id: The submission_id of this Events200EventsInner.  # noqa: E501
        :type submission_id: int
        """
        self.openapi_types = {"event_id": str, "tag_id": int, "submission_id": int}

        self.attribute_map = {
            "event_id": "event_id",
            "tag_id": "tag_id",
            "submission_id": "submission_id",
        }

        self._event_id = event_id
        self._tag_id = tag_id
        self._submission_id = submission_id

    @classmethod
    def from_dict(cls, dikt) -> "Events200EventsInner":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The events200_events_inner of this Events200EventsInner.  # noqa: E501
        :rtype: Events200EventsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_id(self):
        """Gets the event_id of this Events200EventsInner.

        UUID associated with a particular event  # noqa: E501

        :return: The event_id of this Events200EventsInner.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this Events200EventsInner.

        UUID associated with a particular event  # noqa: E501

        :param event_id: The event_id of this Events200EventsInner.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def tag_id(self):
        """Gets the tag_id of this Events200EventsInner.

        Unique numeric tag ID associated with the ingested tag data file  # noqa: E501

        :return: The tag_id of this Events200EventsInner.
        :rtype: int
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this Events200EventsInner.

        Unique numeric tag ID associated with the ingested tag data file  # noqa: E501

        :param tag_id: The tag_id of this Events200EventsInner.
        :type tag_id: int
        """

        self._tag_id = tag_id

    @property
    def submission_id(self):
        """Gets the submission_id of this Events200EventsInner.

        Unique numeric ID assigned upon submission of a tag eTUFF data file for ingest/importation into Tagbase  # noqa: E501

        :return: The submission_id of this Events200EventsInner.
        :rtype: int
        """
        return self._submission_id

    @submission_id.setter
    def submission_id(self, submission_id):
        """Sets the submission_id of this Events200EventsInner.

        Unique numeric ID assigned upon submission of a tag eTUFF data file for ingest/importation into Tagbase  # noqa: E501

        :param submission_id: The submission_id of this Events200EventsInner.
        :type submission_id: int
        """

        self._submission_id = submission_id
