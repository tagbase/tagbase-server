# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tagbase_server.models.base_model_ import Model
from tagbase_server import util


class Tags200TagsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_id=None, filename=None):  # noqa: E501
        """Tags200TagsInner - a model defined in OpenAPI

        :param tag_id: The tag_id of this Tags200TagsInner.  # noqa: E501
        :type tag_id: int
        :param filename: The filename of this Tags200TagsInner.  # noqa: E501
        :type filename: str
        """
        self.openapi_types = {"tag_id": int, "filename": str}

        self.attribute_map = {"tag_id": "tag_id", "filename": "filename"}

        self._tag_id = tag_id
        self._filename = filename

    @classmethod
    def from_dict(cls, dikt) -> "Tags200TagsInner":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tags200_tags_inner of this Tags200TagsInner.  # noqa: E501
        :rtype: Tags200TagsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_id(self):
        """Gets the tag_id of this Tags200TagsInner.

        Unique numeric tag ID associated with the ingested tag data file  # noqa: E501

        :return: The tag_id of this Tags200TagsInner.
        :rtype: int
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this Tags200TagsInner.

        Unique numeric tag ID associated with the ingested tag data file  # noqa: E501

        :param tag_id: The tag_id of this Tags200TagsInner.
        :type tag_id: int
        """

        self._tag_id = tag_id

    @property
    def filename(self):
        """Gets the filename of this Tags200TagsInner.

        Full name and extension of the ingested eTUFF tag data file  # noqa: E501

        :return: The filename of this Tags200TagsInner.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Tags200TagsInner.

        Full name and extension of the ingested eTUFF tag data file  # noqa: E501

        :param filename: The filename of this Tags200TagsInner.
        :type filename: str
        """

        self._filename = filename
