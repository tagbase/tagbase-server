# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tagbase_server.models.base_model_ import Model
from tagbase_server import util


class Tags200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count=None, tag_ids=None):  # noqa: E501
        """Tags200 - a model defined in OpenAPI

        :param count: The count of this Tags200.  # noqa: E501
        :type count: int
        :param tag_ids: The tag_ids of this Tags200.  # noqa: E501
        :type tag_ids: List[Dict[str, int]]
        """
        self.openapi_types = {"count": int, "tag_ids": List[Dict[str, int]]}

        self.attribute_map = {"count": "count", "tag_ids": "tag_ids"}

        self._count = count
        self._tag_ids = tag_ids

    @classmethod
    def from_dict(cls, dikt) -> "Tags200":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Tags200 of this Tags200.  # noqa: E501
        :rtype: Tags200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this Tags200.

        Total count of unique tags  # noqa: E501

        :return: The count of this Tags200.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this Tags200.

        Total count of unique tags  # noqa: E501

        :param count: The count of this Tags200.
        :type count: int
        """

        self._count = count

    @property
    def tag_ids(self):
        """Gets the tag_ids of this Tags200.

        List of unique numeric Tag IDs  # noqa: E501

        :return: The tag_ids of this Tags200.
        :rtype: List[Dict[str, int]]
        """
        return self._tag_ids

    @tag_ids.setter
    def tag_ids(self, tag_ids):
        """Sets the tag_ids of this Tags200.

        List of unique numeric Tag IDs  # noqa: E501

        :param tag_ids: The tag_ids of this Tags200.
        :type tag_ids: List[Dict[str, int]]
        """

        self._tag_ids = tag_ids
