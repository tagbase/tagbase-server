name: main pr build

on:
  # Trigger analysis when pushing to main or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]
jobs:
  lint_openapi:
    name: Lint OpenAPI Specification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3 # Required to mount the Github Workspace to a volume
      - name: Lint OpenAPI Specification
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: jamescooke/openapi-validator:latest
          options: -v ${{ github.workspace }}:/data 
          run: |
            lint-openapi --warnings-limit 0 openapi.yaml
            exit $?
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install tox and any other packages
      run: pip install tox
    - name: Run tox
      working-directory: tagbase_server
      run: tox -e py
    - name: Fix code coverage paths
      working-directory: tagbase_server/tagbase_server
      run: |
        sed -i "s/\/home\/runner\/work\/tagbase-server\/tagbase-server\/tagbase_server\/tagbase_server/\/github\/workspace\/tagbase_server\/tagbase_server\//g" coverage.xml
    - name: SonarCloud Analysis
      if: ${{ github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') }}
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: tagbase_server/tagbase_server
        args: >
          -Dsonar.exclusions=test/**
          -Dsonar.login=35f9ef0c6d604d088bec9a2bd5b1a1c3021eced9
          -Dsonar.organization=tagbase
          -Dsonar.projectKey=tagbase_tagbase-server
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.8,3.9,3.10,3.11
          -Dsonar.sources=.
          -Dsonar.tests=test
          -Dsonar.test.inclusions=test/**
          -Dsonar.verbose=true
  tox_tests:
    name: Tox Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions
      - name: Run tox
        working-directory: tagbase_server
        # Run tox using the version of Python in `PATH`
        run: tox -e py
